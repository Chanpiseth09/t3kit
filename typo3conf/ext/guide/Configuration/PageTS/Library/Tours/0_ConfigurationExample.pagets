# Definition of guided tours setup
# 
# All tours must defined in mod.guide.tours.
# The main node of a tour is the internal name as well.
# This name should be a simple upper-camel-cased string.
#
mod.guide.tours.ConfigurationExample {
	# The title of the tour. This title will be displayed in the backend module.
	# Enter simply some text or a LLL identifier like:
	# title = LLL:EXT:guide/Resources/Private/Language/BootstrapTourPageModule.xlf:tx_guide_tour.title
	title = LLL:EXT:guide/Resources/Private/Language/BootstrapTourTree.xlf:tx_guide_tour.title
	# Description of the tour. This description will be displayed in the backend module.
	# Enter simply some text or a LLL identifier like:
	# description = LLL:EXT:guide/Resources/Private/Language/BootstrapTourPageModule.xlf:tx_guide_tour.description
	description = LLL:EXT:guide/Resources/Private/Language/BootstrapTourTree.xlf:tx_guide_tour.description
	# Internal name of the module
	# This the same identifier like the module kex (M parameter in backend links)
	# The moduleName core is used for tours, which are execute in top frame.
	# Examples:
	# - Page module: web_layout
	# - View module: web_ViewpageView
	moduleName = core
	# Icon identifier for the icon in backend module.
	# The icon identifier has to be registered in the icon registry.
	iconIdentifier = module-guide-tour-core
	steps {
		0 {
			# The selector is passed to jQuery and must be unique
			# Examples:
			# selector = #some-id
			# selector = .some-unique-class
			# selector = .some-multiple-used-class:first
			# selector = select[name=\'WebFuncJumpMenu\']:first
			selector = .typo3-aboutmodules-inner-docbody
			# This is the title of the popover.
			# Enter simply some text or a LLL identifier like:
			# title = LLL:EXT:guide/Resources/Private/Language/BootstrapTourPageModule.xlf:tx_guide_tour.0.title
			title = Welcome to TYPO3 backend
			# This is the content of the popover.
			# Enter simply some text or a LLL identifier like:
			# title = LLL:EXT:guide/Resources/Private/Language/BootstrapTourPageModule.xlf:tx_guide_tour.0.content
			# You're also be able to use HTML tags like i, u, b, br or p. All other tags are disallowed.
			content (
			 This tour will show you the first steps within TYPO3.<br />
			 You're starting here in the <i>about</i> module, which shows you your available modules. 
			 This modules are related on the giving user authorisation.<br />
			 <br />
			 Click on <i>Next</i> for an introduction of the topbar of TYPO3.<br />
			 <br />
			 <i>(You can restart each tour by the guided tours module.)</i>
			)
			# Sets the position of the popover.
			# Possible values are: top, bottom, left, right
			placement = top
			# Disables the arrow on popover.
			# The arrow is displayed by default.
			showArrow = false
			# Actions triggered by clicking the next button
			next {
				# By clicking on next, the tour Topbar is triggered
				tour = Topbar
				# The number/id of the step, which should be displayed
				step = 0
			}
			# Actions triggered by start to show this step
			show {
				# Renames the label of the next button
				renameNextButton = Start next tour
				# Add a class on an element
				addClass {
					# jQuery selector for identifying elements, which should get the class 
					selector = #typo3-cms-backend-backend-toolbaritems-usertoolbaritem
					# Class to be added
					# Attention: Because of an focus issue, opening a dropdown by adding the class open is only working
					# with event shown
					class = open
				}
				# Removes a class from an element
				removeClass {
					# jQuery selector for identifying elements, which should lose the class
					selector = #typo3-cms-backend-backend-toolbaritems-usertoolbaritem
					# Class to be remove
					class = open
				}
				# Open a Bootstrap dropdown
				#openDropdown {
					# jQuery selector of the Bootstrap dropdown
					# Example:
					# jQuery('#typo3-cms-backend-backend-toolbaritems-usertoolbaritem .dropdown-toggle[href="#"]').dropdown();
				#	selector = #typo3-cms-backend-backend-toolbaritems-usertoolbaritem .dropdown-toggle[href="#"]
				#}
				# Opens a select box by jQuery selector
				openSelectBox {
					selector = select[name=\'WebFuncJumpMenu\']:first
				}
			}
			# Actions triggered by finish to show this step
			shown {

			}
			# Actions triggered by hiding a step
			hide {

			}
		}
	}
}